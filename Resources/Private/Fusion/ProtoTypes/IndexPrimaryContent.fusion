prototype(Neos.Neos:PrimaryContent).Index {
    @position = 'start'
    condition = ${q(documentNode).is('[instanceof UpAssist.Neos.News:Index]')}
    type = 'UpAssist.Neos.News:Index'
}

prototype(UpAssist.Neos.News:Index) < prototype(Neos.Fusion:Template) {
    templatePath = 'resource://UpAssist.Neos.News/Private/Templates/DocumentTypes/Index.html'

    breadcrumbs = UpAssist.Neos.News:BreadcrumbMenu

    main = Neos.Neos:ContentCollection {
        nodePath = 'main'
    }

    hasItems = ${q(documentNode).find('[instanceof UpAssist.Neos.News:Article]').count()}

    items = Neos.Fusion:Collection {
        collection = ${q(documentNode).find('[instanceof UpAssist.Neos.News:Article]').count() ? q(documentNode).find('[instanceof UpAssist.Neos.News:Article]').sort('publicationDate', 'DESC') : null}
        itemName = 'node'
        itemRenderer = Neos.Fusion:Template {
        templatePath = 'resource://UpAssist.Neos.News/Private/Templates/ContentTypes/Latest.html'
        sectionName = 'item'
        node = ${node}
        showMoreNewsButton = TRUE
        intro = ${String.crop(String.stripTags(q(node).find('[instanceof Neos.NodeTypes:TextMixin]').first().property('text')), 150, '&hellip;')}
    }

    @process.wrap = ${'<ul class="news-items">' + value + '</ul>'}

    @cache.entryTags {
        1 = ${'NodeType_' + UpAssist.Neos.News:Article}
    }

    archiveMenu = Neos.Neos:Menu {
        startingPoint = ${site}
        maximumLevels = 99
        filter = 'UpAssist.Neos.News:Index'
        attributes.class = Neos.Fusion:RawArray {
            type = 'news-archive-menu'
        }
    }
}
