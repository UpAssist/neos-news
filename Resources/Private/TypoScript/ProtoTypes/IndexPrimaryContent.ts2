prototype(UpAssist.Neos.News:PrimaryContent).Index {
	@position = 'start'
	condition = ${q(documentNode).is('[instanceof UpAssist.Neos.News:Index]')}
	type = 'UpAssist.Neos.News:Index'
}

prototype(UpAssist.Neos.News:Index) {
	templatePath = 'resource://UpAssist.Neos.News/Private/Templates/DocumentTypes/Index.html'

	breadcrumbs = UpAssist.Neos.News:BreadcrumbMenu

	main = TYPO3.Neos:ContentCollection {
		nodePath = 'main'
	}

	items = TYPO3.TypoScript:Collection {
		collection = ${q(documentNode).find('[instanceof UpAssist.Neos.News:Article]')}
		itemName = 'node'
		itemRenderer = TYPO3.TypoScript:Template {
			templatePath = 'resource://UpAssist.Neos.News/Private/Templates/ContentTypes/Latest.html'
			sectionName = 'item'
			node = ${node}
			showMoreNewsButton = TRUE
			intro = ${String.crop(String.stripTags(q(node).find('[instanceof TYPO3.Neos.NodeTypes:TextMixin]').first().property('text')), 150, '&hellip;')}
		}

		@process.wrap = ${'<ul class="news-items">' + value + '</ul>'}
		@cache {
			mode = 'cached'
			entryIdentifier {
				documentNode = ${documentNode}
				node = ${node}
			}
			context {
				1 = 'node'
				2 = 'documentNode'
				3 = 'site'
			}
			entryTags {
				1 = 'UpAssist.Neos.News:Index'
			}
		}
	}

	archiveMenu = TYPO3.Neos:Menu {
		startingPoint = ${site}
		maximumLevels = 99
		filter = 'UpAssist.Neos.News:Index'
#		attributes.class.@process.nodeType >
		attributes.class = TYPO3.TypoScript:RawArray {
			type = 'news-archive-menu'
		}
	}
}
